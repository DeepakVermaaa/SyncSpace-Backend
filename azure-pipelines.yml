trigger:
  branches:
    include:
    - master

variables:
  - name: solution
    value: '**/*.sln'
  - name: buildPlatform
    value: 'Any CPU'
  - name: buildConfiguration
    value: 'Release'
  - name: major
    value: '1'
  - name: minor
    value: '0'
  - name: buildVersion
    value: '$(major).$(minor).$(Build.BuildId)'

stages:
- stage: Build
  jobs:
  - job: Job
    pool:
      name: 'Default'
    steps:
    # Set the build number
    - powershell: |
        Write-Host "##vso[build.updatebuildnumber]$(buildVersion)"
      displayName: 'Set Build Number'
    - task: UseDotNet@2
      inputs:
        version: '7.0.x'
        includePreviewVersions: false
    
    - task: NuGetToolInstaller@1
    
    - task: DotNetCoreCLI@2
      displayName: 'Restore'
      inputs:
        command: restore
        projects: '**/*.csproj'
    
    - task: DotNetCoreCLI@2
      displayName: 'Build'
      inputs:
        command: build
        projects: '**/*.csproj'
        arguments: '--configuration $(buildConfiguration)'
    
    - task: DotNetCoreCLI@2
      displayName: 'Test'
      inputs:
        command: test
        projects: '**/*Tests/*.csproj'
        arguments: '--configuration $(buildConfiguration)'
    
    - task: DotNetCoreCLI@2
      displayName: 'Publish'
      inputs:
        command: publish
        publishWebProjects: true
        arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
        zipAfterPublish: true
    
    # Add version info to artifacts
    - powershell: |
        Set-Content -Path "$(Build.ArtifactStagingDirectory)/version.txt" -Value "$(buildVersion)"
      displayName: 'Save Version Info'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifacts'
      inputs:
        pathtoPublish: '$(Build.ArtifactStagingDirectory)'
        artifactName: 'drop_$(buildVersion)'

- stage: Deploy_Development
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: Deploy
    pool:
      name: 'Default'
    environment: development
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadBuildArtifacts@1
            inputs:
              buildType: 'current'
              downloadType: 'single'
              artifactName: 'drop_$(buildVersion)'
              downloadPath: '$(System.ArtifactsDirectory)'
          
          - task: CopyFiles@2
            inputs:
              SourceFolder: '$(System.ArtifactsDirectory)/drop_$(buildVersion)'
              TargetFolder: 'C:\Deploy\MyApp'